name: LingLink System Deployment

on:
  push:
    branches: [ "cicd" ]

env:
  IMAGE_NAME: linglink-frontend

jobs:
  push_new_image:
    name: Build And Push New Image Into DockerHub
    runs-on: ubuntu-latest
    environment: 
      name: linglink-frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get commit ID
        id: commit_id
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image            
        run: |
          docker build \
          --build-arg NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }} \
          --build-arg NEXT_PUBLIC_BASE_URL_V2=${{ secrets.NEXT_PUBLIC_BASE_URL_V2 }} \
          --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
          --build-arg NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }} \
          --build-arg NEXT_PUBLIC_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUD_NAME }} \
          --build-arg NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }} \
          --build-arg NEXT_PUBLIC_API_SECRET=${{ secrets.NEXT_PUBLIC_API_SECRET }} \
          --build-arg NEXT_PUBLIC_UPLOAD_PRESET=${{ secrets.NEXT_PUBLIC_UPLOAD_PRESET }} \
          --build-arg NEXT_PUBLIC_GOOGLE_GEMINI_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_GEMINI_API_KEY }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }}

      - name: Rename Docker image
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Image latest
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # deploy:
  #   name: Deploy System To EC2 Instance
  #   needs: push_new_image
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: linglink

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Deploy Into EC2 Instance
  #       env:
  #           PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #           HOSTNAME: ${{secrets.SSH_HOST}}
  #           USER_NAME: ${{secrets.USER_NAME}}
      
  #       run: |
  #         echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
  #         ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

  #             # Now we have got the access of EC2 and we will start the deploy .
  #             sudo docker stop linglink &&
  #             sudo docker remove linglink &&
  #             sudo docker rmi tringuyennek/linglink-system &&
  #             sudo docker pull tringuyennek/linglink-system:latest &&
  #             cd /etc &&
  #             sudo docker run --name linglink -p 3000:3000 --env-file app.env -d tringuyennek/linglink-system &&
  #             exit
  #             '
            
  #         rm private_key

